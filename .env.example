# NASA CMR AI Agent - Environment Configuration Template
# Copy this file to .env and configure with your actual values

# =============================================================================
# REQUIRED CONFIGURATION - Minimum setup to run the system
# =============================================================================

# LLM API Configuration (Required - At least one API key needed)
# The system needs an LLM for intelligent query processing
OPENAI_API_KEY=your_openai_api_key_here
# OR use Anthropic instead
ANTHROPIC_API_KEY=your_anthropic_api_key_here
# OR use Google Gemini (optional third option)
GEMINI_API_KEY=your_gemini_api_key_here

# LLM Model Selection
OPENAI_MODEL=gpt-4-turbo-preview
ANTHROPIC_MODEL=claude-3-sonnet-20240229
GEMINI_MODEL=gemini-1.5-pro

# =============================================================================
# Database URLs (Docker Environment)
# =============================================================================
# Weaviate Vector Database
WEAVIATE_URL=http://weaviate:8080
WEAVIATE_API_KEY=

# Neo4j Knowledge Graph
NEO4J_URI=bolt://neo4j:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password
NEO4J_DATABASE=neo4j

# Redis Cache
REDIS_URL=redis://redis:6379
REDIS_DB=0
REDIS_CACHE_TTL=3600

# =============================================================================
# Database URLs (Local Development)
# =============================================================================
# Uncomment these for local development outside Docker:
# WEAVIATE_URL=http://localhost:8080
# NEO4J_URI=bolt://localhost:7687
# REDIS_URL=redis://localhost:6379

# =============================================================================
# NASA CMR API Configuration
# =============================================================================
CMR_BASE_URL=https://cmr.earthdata.nasa.gov/search
CMR_REQUEST_TIMEOUT=30
CMR_MAX_RETRIES=3
CMR_RATE_LIMIT_PER_SECOND=10

# =============================================================================
# Application Configuration
# =============================================================================
API_HOST=0.0.0.0
API_PORT=8000
API_DEBUG=false
API_RELOAD=false

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json

# Environment
ENVIRONMENT=production

# =============================================================================
# Performance & Reliability
# =============================================================================
MAX_CONCURRENT_REQUESTS=10
REQUEST_TIMEOUT=60
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=30

# =============================================================================
# Advanced Features (Enable/Disable)
# =============================================================================
ENABLE_VECTOR_SEARCH=true
ENABLE_KNOWLEDGE_GRAPH=true
ENABLE_RAG=true

# =============================================================================
# Embedding Model Configuration
# =============================================================================
EMBEDDING_MODEL=all-MiniLM-L6-v2

# =============================================================================
# OPTIONAL CONFIGURATION - Enhances features but not required
# =============================================================================

# NASA API Credentials (Optional - Enables enhanced features)
# Without these, the system uses public CMR access with full functionality
# With these, you get additional data sources and analysis capabilities

# Earthdata Login (Recommended for enhanced NASA features)
# Get free account at: https://urs.earthdata.nasa.gov/
# EARTHDATA_USERNAME=your_nasa_username
# EARTHDATA_PASSWORD=your_nasa_password
# EARTHDATA_CLIENT_ID=your_oauth_client_id
# EARTHDATA_CLIENT_SECRET=your_oauth_client_secret
# EARTHDATA_REDIRECT_URI=http://localhost:8000/auth/callback

# LAADS DAAC API Key (Optional - Enhanced MODIS data access)
# Get at: https://ladsweb.modaps.eosdis.nasa.gov/ (Account Settings â†’ API Keys)
# LAADS_API_KEY=your_laads_api_key

# =============================================================================
# API Key Management (Optional - For production deployments)
# =============================================================================
# Enable unified API key management system
ENABLE_API_KEY_MANAGER=false
# Set encryption key for secure API key storage (production only)
# API_KEY_ENCRYPTION_KEY=your_encryption_key

# =============================================================================
# Monitoring
# =============================================================================
PROMETHEUS_PORT=9090
ENABLE_METRICS=true

# =============================================================================
# Quick Start Instructions
# =============================================================================
# 1. MINIMUM SETUP (Works immediately):
#    - Set OPENAI_API_KEY or ANTHROPIC_API_KEY
#    - Run: python main.py --server
#    - Access: http://localhost:8000
#
# 2. ENHANCED SETUP (Optional improvements):
#    - Add NASA credentials above for enhanced features
#    - Run with Docker Compose for database integration
#    - Enable API key management for production use